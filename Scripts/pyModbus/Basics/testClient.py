#------------------------------------------------------------------------------------------------#
#                                testClient.py                                                   #
# A Modbus client program that collects and prints register data from a Modbus server.           #
# Server IP must be input via command line when this program is run.                             #
#                                                                                                #
#------------------------------------------------------------------------------------------------#

import atexit
from pymodbus.client.tcp import ModbusTcpClient
import sys
import time

#Set server IP to command line argument
ip = str(sys.argv[1])

#Set server to specified IP and port 5502
server = ModbusTcpClient(ip,port="5502")

#Main loop
def main():
    #When the program exits, close the server
    atexit.register(serverClose)

    #Repeat until forced exit
    while True:
        #Read each of the data areas in the server
        coils = server.read_coils(address=0, count=10)
        discrete_inputs = server.read_discrete_inputs(address=0, count=10)
        holding_registers = server.read_holding_registers(address=0, count=10)
        input_registers = server.read_input_registers(address=0, count=10)

        #Check whether an error has been triggered in data collection
        if coils.isError():
            print(f"Error getting coils: {coils}")
            raise Exception(f"Error getting coils: {coils}")


        #Print the server data to console
        print("Coils: ", coils.bits)
        print("Discrete Inputs: ", discrete_inputs.bits)
        print("Holding Registers: ", holding_registers.registers)
        print("Input Registers: ", input_registers.registers)

        #Wait five seconds before repeating
        time.sleep(5)

def serverClose():
    server.close()

main()