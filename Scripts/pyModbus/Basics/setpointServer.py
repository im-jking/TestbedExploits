import logging
import psutil
import random
import threading
import time
from pymodbus.datastore import ModbusSequentialDataBlock, ModbusSlaveContext, ModbusServerContext
from pymodbus.server.async_io import StartTcpServer

ip = "192.168.100.5"

logging.basicConfig()
log = logging.getLogger()
log.setLevel(logging.DEBUG)

coils = ModbusSequentialDataBlock(1, [False] * 100)
discrete_inputs = ModbusSequentialDataBlock(1, [False] * 10)
holding_registers = ModbusSequentialDataBlock(1, [0] * 10)
input_registers = ModbusSequentialDataBlock(1, [0] * 10)

slave_context = ModbusSlaveContext(
    di = discrete_inputs,
    co = coils,
    hr = holding_registers,
    ir = input_registers
)

#Set registers to random values, except for register 10
tempValues = [random.randint(1,15) for _ in range(10)]
holding_registers.setValues(1, tempValues)

#Set registers 9 AND 10??? (the bandwidth registers) to 0
holding_registers.setValues(9, [0,0])

server_context = ModbusServerContext(slaves=slave_context, single=True)


#Monitor network usage, sound alarm if it's too high
#Help from https://www.youtube.com/watch?v=O76lnYFvbTU
def bandwidthMonitor():
    lastRecv = psutil.net_io_counters().bytes_recv
    lastSent = psutil.net_io_counters().bytes_sent
    lastTotal = lastSent + lastRecv

    while True:
        newRecv = psutil.net_io_counters().bytes_recv
        newSent = psutil.net_io_counters().bytes_sent
        newTotal = newRecv + newSent

        #Calculate difference in network usage, convert to MB; DO I NEED TO CONVERT???
        bytesRecv = (newRecv - lastRecv) / 1048576
        bytesSent = (newSent - lastSent) / 1048576
        bytesTotal = (newTotal - lastTotal) / 1048576

        lastRecv = newRecv
        lastSent = newSent
        lastTotal = newTotal

    return

#Run the bandwidth monitor function in the background
netThread = threading.Thread(target=bandwidthMonitor(), name="Bandwidth Alarm", args=)
netThread.start()

StartTcpServer(context=server_context,address=(ip,5502))